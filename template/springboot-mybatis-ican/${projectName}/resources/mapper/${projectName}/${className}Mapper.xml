<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${basePackage}.mapper.${className}Dao">

    <insert id="insert" parameterType="${basePackage}.entity.${className}">
        INSERT INTO ${tableName?upper_case} 
            (<#list columns as column>${column.name}<#if column_has_next>, </#if></#list>)
        VALUES 
            (<#list columns as column><#noparse>#{</#noparse>${column.javaNameVariable}<#noparse>}</#noparse><#if column_has_next>, </#if></#list>)
    </insert>

    <update id="update" parameterType="${basePackage}.entity.${className}">
        UPDATE ${tableName?upper_case} 
        <trim prefix="SET" suffixOverrides=",">
        <#list columns as column>
            <if test='${column.name?upper_case} != null'>
                ${column.name} = <#noparse>#{</#noparse>${column.javaNameVariable}<#noparse>}</#noparse>
            </if>
        </#list>
        </trim>
        <@generateWhere columns "" "        "/>
    </update>

    <delete id="delete" parameterType="${basePackage}.entity.${className}">
        DELETE FROM ${tableName?upper_case} 
        <@generateWhere columns "" "        "/>
    </delete>

    <resultMap id="${className}ResultMap" type="${basePackage}.entity.${className}">
        <#list columns as column>
        <result column="${column.name}" jdbcType="${column.jdbcType}" property="${column.javaNameVariable}"/>
        </#list>
    </resultMap>

    <select id="list${className}" parameterType="${basePackage}.entity.${className}" resultMap="${className}ResultMap">
        SELECT 
            <#list columns as column>
            T1.${column.name}<#if column_has_next>, </#if>
            </#list>
        FROM ${tableName} AS T1
        <@generateWhere columns "T1" "        "/>
    </select>

<#list parentReferences as reference>
	<resultMap id="list${className}${reference.className}ToOne${reference_index}Result" type="${basePackage}.entity.${className}">
        <#list columns as column>
        <result column="T2_${column.name}" jdbcType="${column.jdbcType}" property="${column.javaNameVariable}"/>
        </#list>
        <association property="${reference.classNameVariable}" javaType="${basePackage}.entity.${reference.className}">
            <#list reference.columns as column>
            <result column="T1_${column.name}" jdbcType="${column.jdbcType}" property="${column.javaNameVariable}"/>
            </#list>
        </association>
    </resultMap>

    <select id="list${className}${reference.className}ToOne${reference_index}" parameterType="${basePackage}.entity.${className}" resultMap="list${className}${reference.className}ToOne${reference_index}Result">
        SELECT 
            <#list reference.columns as column>
            T1.${column.name} as T1_${column.name}, 
            </#list>
            <#list columns as column>
            T2.${column.name} as T2_${column.name}<#if column_has_next>, </#if>
            </#list>
        FROM 
            ${reference.tableName?upper_case} AS T1 
                RIGHT JOIN 
            ${tableName?upper_case} AS T2 ON <#list reference.columnMappings as columnMapping>T1.${columnMapping.mapping.name} = T2.${columnMapping.self.name}<#if columnMapping_has_next>, </#if> </#list>
        <@generateWhere columns "T2" "        "/>
    </select>

</#list>

<#list childReferences as reference>
    <resultMap id="list${className}${reference.className}ToMany${reference_index}Result" type="${basePackage}.entity.${className}">
        <#list columns as column>
        <result column="T2_${column.name}" jdbcType="${column.jdbcType}" property="${column.javaNameVariable}"/>
        </#list>
        <collection property="${reference.classNameVariable}List" ofType="${basePackage}.entity.${reference.className}">
            <#list reference.columns as column>
            <result column="T1_${column.name}" jdbcType="${column.jdbcType}" property="${column.javaNameVariable}"/>
            </#list>
        </collection>
    </resultMap>

    <select id="list${className}${reference.className}ToMany${reference_index}" parameterType="${basePackage}.entity.${className}" resultMap="list${className}${reference.className}ToMany${reference_index}Result">
        SELECT 
            <#list reference.columns as column>
            T1.${column.name} as T1_${column.name}, 
            </#list>
            <#list columns as column>
            T2.${column.name} as T2_${column.name}<#if column_has_next>, </#if>
            </#list>
        FROM 
            ${reference.tableName?upper_case} AS T1 
                LEFT JOIN 
            ${tableName?upper_case} AS T2 ON <#list reference.columnMappings as columnMapping>T1.${columnMapping.mapping.name} = T2.${columnMapping.self.name}<#if columnMapping_has_next>, </#if> </#list>
        <@generateWhere columns "T2" "        "/>
    </select>

</#list>
</mapper>