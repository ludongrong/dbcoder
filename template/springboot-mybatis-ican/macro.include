<#-- 构造函数 -->
<#macro generateConstructor constructor>
    public ${constructor}() {}
</#macro>




<#-- mybatis where -->
<#macro generateWhere columns prefix blank>
${blank}<where>
<#list columns as column>
<#if column.javaType == "java.lang.String">
${blank}    <if test='${column.name?upper_case} != null and ${column.name?upper_case} != ""'>
${blank}        AND <#if prefix != "">${prefix}.</#if>${column.name} = <#noparse>#{</#noparse>${column.name?upper_case}<#noparse>}</#noparse>
${blank}    </if>
<#else>
${blank}    <if test='${column.name?upper_case} != null'>
${blank}        AND <#if prefix != "">${prefix}.</#if>${column.name} = <#noparse>#{</#noparse>${column.name?upper_case}<#noparse>}</#noparse>
${blank}    </if>
</#if>
</#list>
${blank}</where>
</#macro>




<#-- postman 请求参数 -->
<#macro generatePostmanParam columns>"{<#list columns as column><#if column.javaType == "java.sql.Date" || column.javaType == "java.sql.Timestamp">\"${column.javaNameVariable}\": \"2022-04-13 15:20:11\"<#elseif column.javaType == "java.sql.Time">\"${column.javaNameVariable}\": \"15:20:11\"<#else>\"${column.javaNameVariable}\": \"\"</#if><#if column_has_next>, </#if></#list>}",</#macro>


